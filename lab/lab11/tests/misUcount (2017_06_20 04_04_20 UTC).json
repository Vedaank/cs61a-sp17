{"countData": {"setcanhavedups": 3, "setcanhavedups-sets": 3, "sortedevalsbool": 2, "sortedevalsbool-sortedfn": 2, "ampnotvalid": 1, "ampnotvalid-intersect": 1, "intersectisunion": 1, "intersectisunion-intersect": 1, "setdiffisnotitself": 1, "setdiffisnotitself-setdiff": 1}, "answerDict": {">>> a = [1, 1, 2, 2, 3, 3]\n>>> a = set(a)\n>>> len(a)\nLOCKED_ANSWER\n>>> sorted(a)\nLOCKED_ANSWER\n>>> a.add(4)\n>>> a.add(4)\n>>> a.remove(4)\n>>> 4 in a\nLOCKED_ANSWER\n>>> a = {1, 4, 12, 1000}\n>>> sum(a)\nLOCKED_ANSWER\n>>> b = {1, 2, 4}\n>>> sorted(a.intersection(b))\nLOCKED_ANSWER\n>>> sorted(a & b)\nLOCKED_ANSWER\n>>> sorted(a.union(b))\nLOCKED_ANSWER\n>>> sorted(a | b)\nLOCKED_ANSWER\n>>> sorted(a - b)\nLOCKED_ANSWER\n": ["['6']"], ">>> a = [1, 1, 2, 2, 3, 3]\n>>> a = set(a)\n>>> len(a)\n3\n>>> sorted(a)\n[1, 2, 3]\n>>> a.add(4)\n>>> a.add(4)\n>>> a.remove(4)\n>>> 4 in a\nLOCKED_ANSWER\n>>> a = {1, 4, 12, 1000}\n>>> sum(a)\nLOCKED_ANSWER\n>>> b = {1, 2, 4}\n>>> sorted(a.intersection(b))\nLOCKED_ANSWER\n>>> sorted(a & b)\nLOCKED_ANSWER\n>>> sorted(a.union(b))\nLOCKED_ANSWER\n>>> sorted(a | b)\nLOCKED_ANSWER\n>>> sorted(a - b)\nLOCKED_ANSWER\n": ["['True']", "['Error']", "['false']"], ">>> a = [1, 1, 2, 2, 3, 3]\n>>> a = set(a)\n>>> len(a)\n3\n>>> sorted(a)\n[1, 2, 3]\n>>> a.add(4)\n>>> a.add(4)\n>>> a.remove(4)\n>>> 4 in a\nFalse\n>>> a = {1, 4, 12, 1000}\n>>> sum(a)\n1017\n>>> b = {1, 2, 4}\n>>> sorted(a.intersection(b))\nLOCKED_ANSWER\n>>> sorted(a & b)\nLOCKED_ANSWER\n>>> sorted(a.union(b))\nLOCKED_ANSWER\n>>> sorted(a | b)\nLOCKED_ANSWER\n>>> sorted(a - b)\nLOCKED_ANSWER\n": ["['set([1, 4])']"], ">>> a = [1, 1, 2, 2, 3, 3]\n>>> a = set(a)\n>>> len(a)\n3\n>>> sorted(a)\n[1, 2, 3]\n>>> a.add(4)\n>>> a.add(4)\n>>> a.remove(4)\n>>> 4 in a\nFalse\n>>> a = {1, 4, 12, 1000}\n>>> sum(a)\n1017\n>>> b = {1, 2, 4}\n>>> sorted(a.intersection(b))\n[1, 4]\n>>> sorted(a & b)\nLOCKED_ANSWER\n>>> sorted(a.union(b))\nLOCKED_ANSWER\n>>> sorted(a | b)\nLOCKED_ANSWER\n>>> sorted(a - b)\nLOCKED_ANSWER\n": ["['Ture']", "['True']", "['Error']", "['False']", "['Function']", "['[1, 1, 2, 4, 4, 12, 1000]']"], ">>> a = [1, 1, 2, 2, 3, 3]\n>>> a = set(a)\n>>> len(a)\n3\n>>> sorted(a)\n[1, 2, 3]\n>>> a.add(4)\n>>> a.add(4)\n>>> a.remove(4)\n>>> 4 in a\nFalse\n>>> a = {1, 4, 12, 1000}\n>>> sum(a)\n1017\n>>> b = {1, 2, 4}\n>>> sorted(a.intersection(b))\n[1, 4]\n>>> sorted(a & b)\n[1, 4]\n>>> sorted(a.union(b))\nLOCKED_ANSWER\n>>> sorted(a | b)\nLOCKED_ANSWER\n>>> sorted(a - b)\nLOCKED_ANSWER\n": ["['[1, 1, 2, 4, 4, 12, 1000]']"], ">>> a = [1, 1, 2, 2, 3, 3]\n>>> a = set(a)\n>>> len(a)\n3\n>>> sorted(a)\n[1, 2, 3]\n>>> a.add(4)\n>>> a.add(4)\n>>> a.remove(4)\n>>> 4 in a\nFalse\n>>> a = {1, 4, 12, 1000}\n>>> sum(a)\n1017\n>>> b = {1, 2, 4}\n>>> sorted(a.intersection(b))\n[1, 4]\n>>> sorted(a & b)\n[1, 4]\n>>> sorted(a.union(b))\n[1, 2, 4, 12, 1000]\n>>> sorted(a | b)\n[1, 2, 4, 12, 1000]\n>>> sorted(a - b)\nLOCKED_ANSWER\n": ["['[2, 12, 1000]']"]}}